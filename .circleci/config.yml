version: 2.1

# orbsは構成内容をまとめたコマンドが使えるようになるので便利
orbs:
  ruby: circleci/ruby@1.1.2
  heroku: circleci/heroku@1.2.6

#  実行環境を定義
executors:
  default:
    docker:
      # stretch:バージョンを厳密に定義・node:Node.jsがプリインストールされているイメージを取得
      - image: circleci/ruby:2.6.5-stretch-node
        environment:
          DATABASE_HOST: 127.0.0.1
          DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      - image: circleci/mysql:5.6
        environment:
          MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}

jobs:
  build:
    executor:
      name: default
    steps:
      # Gitリポジトリの内容をコピー
      - checkout

      # Bundle Install
      - ruby/install-deps

      # Yarn Install
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-
      - run:
          name: "Yarn Install"
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # DBのセットアップ
      - run:
          name: "DBのコンテナが起動するまで待機する"
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: "DBの作成"
          command: bundle exec rails db:create RAILS_ENV=test
      - run:
          name: "DBの反映"
          command: bundle exec rails db:migrate RAILS_ENV=test

      # buildの内容をtestでも使う
      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    executor:
      name: default
    steps:
      # buildの内容をリストアする
      - attach_workspace:
          at: .
      # RSpecによるテスト
      - ruby/rspec-test

  # Herokuへのデプロイ
  deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      # masterブランチにpushされたときのみdeployを実行
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only: master
